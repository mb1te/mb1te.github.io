<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Lec 7</title>
</head>
<body>
    <canvas width="1000" height="600"></canvas>
    <script>
        let EPS = 1e-7; // эпсилон для работы с вещественными числами

        // подключение canvas
        let canvas = document.querySelector("canvas");
        let ctx = canvas.getContext("2d");

        // генерация точек множества нормальным распределением
        const size = 100;
        let pts = [];
        for (let i = 0; i < size; i++) {
            let x = Math.random() * canvas.width, y = Math.random() * canvas.height;
            pts.push([x, y]);
        }

        // функция, находящая треугольник, содержащий все точки
        function big_triangle(points) {
            let minx = -10000, maxx = 10000, miny = -10000, maxy = 10000;
            for (let i = 0; i < points.length; i++) {
                minx = Math.min(minx, points[i][0]);
                miny = Math.min(miny, points[i][1]);
                maxx = Math.max(maxx, points[i][0]);
                maxy = Math.max(maxy, points[i][1]);
            }
            let dx = maxx - minx, dy = maxy - miny;
            let dxy = Math.max(dx, dy);
            let midx = dx * 0.5 + minx, midy = dy * 0.5 + miny;
            return [
                [midx - dx, midy - dy],
                [midx, midy + dy],
                [midx + dx, midy - dy]
            ]
        }

        // вычисление описанной окружности
        function circumcircle_of_triangle(pts, v1, v2, v3) {
            let x1 = points[v1][0], y1 = points[v1][1];
            let x2 = points[v2][0], y2 = points[v2][1];
            let x3 = points[v3][0], y3 = points[v3][1];
            let dy12 = Math.abs(y1 - y2), dy23 = Math.abs(y2 - y3);
            let xc, yc;
            if (dy12 < EPS) {
                let m2  = -((x3 - x2) / (y3 - y2));
                let mx2 = (x2 + x3) / 2, my2 = (y2 + y3) / 2;
                xc  = (x1 + x2) / 2, yc  = m2 * (xc - mx2) + my2;
            }
            else if (dy23 < EPS) {
                let m1  = -((x2 - x1) / (y2 - y1));
                let mx1 = (x1 + x2) / 2, my1 = (y1 + y2) / 2;
                xc  = (x2 + x3) / 2, yc  = m1 * (xc - mx1) + my1;
            }
            else {
                let m1  = -((x2 - x1) / (y2 - y1)), m2  = -((x3 - x2) / (y3 - y2));
                let mx1 = (x1 + x2) / 2, my1 = (y1 + y2) / 2;
                let mx2 = (x2 + x3) / 2, my2 = (y2 + y3) / 2;
                xc  = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);
                if (dy12 > dy23) yc =  m1 * (xc - mx1) + my1;
                else yc = m2 * (xc - mx2) + my2;
            }
            let dx = x2 - xc, dy = y2 - yc;
            return {'a': v1, 'b': v2, 'c': v3, 'x': xc, 'y': yc, 'r': dx*dx + dy*dy};
        }

        // функция, находящая триангуляцию
        function triangulate(points) {
            let n = points.length;
            if (n < 3) return []; // треугольников нет
            points = points.slice(0); // копия массива
            
            // массив индексов, отсортированных по координате икс
            let ind = [];
            for (let i = 0; i < n; i++) ind.push(i);
            ind.sort(function(x, y) {
                return points[j][0] - points[i][0];
            })

            // треугольник, содержащий все точки
            let big = big_triangle(points);
            points.push(big[0]);
            points.push(big[1]);
            points.push(big[2]);

            cur_points = [circumcircle_of_triangle(points, n, n + 1, n + 2)];
            ans = [];
            edges = [];

            for (let i = 0; )

        }

        // отрисовка триангуляции
        let triangles = triangulate(pts);
        for (let i = 0; i < triangles.length;) {
            ctx.beginPath();
            ctx.moveTo(pts[triangles[i]][0], pts[triangles[i][1]]); i++;
            ctx.lineTo(pts[triangles[i]][0], pts[triangles[i][1]]); i++;
            ctx.lineTo(pts[triangles[i]][0], pts[triangles[i][1]]); i++;
            ctx.closePath();
            ctx.stroke();
        }


    </script>
</body>
</html>